/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumCashflowContractAccount } from "./EnumCashflowContractAccount";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { EnumCashflowContractBusinessEntity } from "./EnumCashflowContractBusinessEntity";
import { CashflowContractListRelationFilter } from "./CashflowContractListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { CashflowContractWhereUniqueInput } from "./CashflowContractWhereUniqueInput";
import { EnumCashflowContractTerm } from "./EnumCashflowContractTerm";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";
@InputType()
class CashflowContractWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumCashflowContractAccount,
  })
  @IsEnum(EnumCashflowContractAccount)
  @IsOptional()
  @Field(() => EnumCashflowContractAccount, {
    nullable: true,
  })
  account?: "FoxrunDeliveryEnt";

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  acquisitionDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  amountPerTerm?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumCashflowContractBusinessEntity,
  })
  @IsEnum(EnumCashflowContractBusinessEntity)
  @IsOptional()
  @Field(() => EnumCashflowContractBusinessEntity, {
    nullable: true,
  })
  businessEntity?: "FoxRunDelivery" | "Quantize" | "HybridInnovations";

  @ApiProperty({
    required: false,
    type: () => CashflowContractListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CashflowContractListRelationFilter)
  @IsOptional()
  @Field(() => CashflowContractListRelationFilter, {
    nullable: true,
  })
  contracts?: CashflowContractListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  customServiceName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  expenseDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isSeries?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  manager?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  notes?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  oneTimeOnly?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CashflowContractWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CashflowContractWhereUniqueInput)
  @IsOptional()
  @Field(() => CashflowContractWhereUniqueInput, {
    nullable: true,
  })
  series?: CashflowContractWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  serviceName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumCashflowContractTerm,
  })
  @IsEnum(EnumCashflowContractTerm)
  @IsOptional()
  @Field(() => EnumCashflowContractTerm, {
    nullable: true,
  })
  term?:
    | "Monthly"
    | "Quarterly"
    | "Yearly"
    | "UsersMonthly"
    | "UsersQuarterly"
    | "UsersYearly";

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  users?: UserListRelationFilter;
}
export { CashflowContractWhereInput };
