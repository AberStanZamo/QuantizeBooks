datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  approvedExpenses         Expense[]          @relation(name: "approvedExpenses")
  cashflowContract         CashflowContract[] @relation(name: "CashflowContractOnUsers")
  cashflowContractsManager CashflowContract[] @relation(name: "cashflowContractsManager")
  createdAt                DateTime           @default(now())
  expenses                 Expense[]          @relation(name: "expenses")
  firstName                String?
  id                       String             @id @default(cuid())
  lastName                 String?
  password                 String
  roles                    String[]
  updatedAt                DateTime           @updatedAt
  username                 String             @unique
}

model Expense {
  amount         Float?
  approval       DateTime?
  approver       User?                      @relation(name: "approvedExpenses", fields: [approverId], references: [id])
  approverId     String?
  businessEntity EnumExpenseBusinessEntity?
  createdAt      DateTime                   @default(now())
  id             String                     @id @default(cuid())
  notes          String?
  paid           DateTime?
  purchaseDate   DateTime?
  requester      User?                      @relation(name: "expenses", fields: [requesterId], references: [id])
  requesterId    String?
  title          String?
  updatedAt      DateTime                   @updatedAt
}

model CashflowContract {
  account           EnumCashflowContractAccount?
  acquisitionDate   DateTime?
  amountPerTerm     Float?
  businessEntity    EnumCashflowContractBusinessEntity?
  categories        EnumCashflowContractCategories[]
  contracts         CashflowContract[]                  @relation(name: "contracts")
  createdAt         DateTime                            @default(now())
  customServiceName String?
  expenseDate       DateTime?
  id                String                              @id @default(cuid())
  isSeries          Boolean?
  manager           User?                               @relation(name: "cashflowContractsManager", fields: [managerId], references: [id])
  managerId         String?
  notes             String?
  oneTimeOnly       Boolean?
  series            CashflowContract?                   @relation(name: "contracts", fields: [seriesId], references: [id])
  seriesId          String?
  serviceName       String?
  term              EnumCashflowContractTerm?
  updatedAt         DateTime                            @updatedAt
  users             User[]                              @relation(name: "CashflowContractOnUsers")
}

enum EnumExpenseBusinessEntity {
  FoxRunDelivery
  Quantize
  HybridInnovations
}

enum EnumCashflowContractAccount {
  FoxrunDeliveryEnt
}

enum EnumCashflowContractBusinessEntity {
  FoxRunDelivery
  Quantize
  HybridInnovations
}

enum EnumCashflowContractCategories {
  SoftwareSubscription
  Misc
  Income
  Deposit
  Withdrawal
  OperatingCost
  LoanPayment
}

enum EnumCashflowContractTerm {
  Monthly
  Quarterly
  Yearly
  UsersMonthly
  UsersQuarterly
}